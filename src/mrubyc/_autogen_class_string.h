/* Auto generated by make_method_table.rb */
#include "_autogen_builtin_symbol.h"

/*===== String class =====*/
static const mrbc_sym method_symbols_String[] = {
  MRBC_SYM(MUL),
  MRBC_SYM(PLUS),
  MRBC_SYM(LT_LT),
  MRBC_SYM(BL_BR),
  MRBC_SYM(BL_BR_EQ),
  MRBC_SYM(b),
  MRBC_SYM(bytes),
  MRBC_SYM(chomp),
  MRBC_SYM(chomp_E),
  MRBC_SYM(clear),
  MRBC_SYM(dup),
  MRBC_SYM(empty_Q),
  MRBC_SYM(end_with_Q),
  MRBC_SYM(getbyte),
  MRBC_SYM(include_Q),
  MRBC_SYM(index),
  MRBC_SYM(inspect),
  MRBC_SYM(intern),
  MRBC_SYM(length),
  MRBC_SYM(lstrip),
  MRBC_SYM(lstrip_E),
  MRBC_SYM(new),
  MRBC_SYM(ord),
  MRBC_SYM(rstrip),
  MRBC_SYM(rstrip_E),
  MRBC_SYM(size),
  MRBC_SYM(slice_E),
  MRBC_SYM(split),
  MRBC_SYM(start_with_Q),
  MRBC_SYM(strip),
  MRBC_SYM(strip_E),
#if MRBC_USE_FLOAT
  MRBC_SYM(to_f),
#endif
  MRBC_SYM(to_i),
  MRBC_SYM(to_s),
  MRBC_SYM(to_sym),
  MRBC_SYM(tr),
  MRBC_SYM(tr_E),
};

static const mrbc_func_t method_functions_String[] = {
  c_string_mul,
  c_string_add,
  c_string_append,
  c_string_slice,
  c_string_insert,
  c_ineffect,
  c_string_bytes,
  c_string_chomp,
  c_string_chomp_self,
  c_string_clear,
  c_string_dup,
  c_string_empty,
  c_string_end_with,
  c_string_getbyte,
  c_string_include,
  c_string_index,
  c_string_inspect,
  c_string_to_sym,
  c_string_size,
  c_string_lstrip,
  c_string_lstrip_self,
  c_string_new,
  c_string_ord,
  c_string_rstrip,
  c_string_rstrip_self,
  c_string_size,
  c_string_slice_self,
  c_string_split,
  c_string_start_with,
  c_string_strip,
  c_string_strip_self,
#if MRBC_USE_FLOAT
  c_string_to_f,
#endif
  c_string_to_i,
  c_string_to_s,
  c_string_to_sym,
  c_string_tr,
  c_string_tr_self,
};

struct RBuiltinClass mrbc_class_String = {
  MRBC_SYM(String),
  sizeof(method_symbols_String) / sizeof(mrbc_sym),
  MRBC_CLASS(Object),
  0,
#if defined(MRBC_DEBUG)
  "String",
#endif
  method_symbols_String,
  method_functions_String,
};
